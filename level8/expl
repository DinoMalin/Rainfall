flag: c542e581c5ba5162a85f767996e3247ed619ef6c6f7b76a59435545dc6259f8a

We got a level with a read-eval loop that tries poorly to do an authentification system.
It reads 4 instructions: auth, service, reset and login.
auth sets the auth variable to an allocated value of size 4, service sets the service variable to an allocated value of undetermined size.
reset frees auth, login checks if auth[8] is non-zero, in which case it opens a shell.
auth[8] by sections of 4 bytes meaning it check the zone between the 32th and the 36th byte.

The first thought that comes to mind would then be to just overflow the 4 bytes allocated by auth, but auth doesn't let us go past 30 bytes.
Knowing that malloc works allocating 16 bytes at a time, we just have to use service to reach the 32th byte, because service will be allocated automatically right after auth.
We fill service with a space and 15 a (the space being there for clarity).

auth 
service aaaaaaaaaaaaaaa
login

> cat /home/user/level9/.pass
